---
import MainLayout from "../../../layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import ArticleCard from "../../../components/ArticleCard.astro";
import { capitalizer } from "../../../utils/capitalizer";
import Link from "../../../components/Link.astro";

const allBlogArticles: CollectionEntry<"blog">[] = (
  await getCollection("blog")
).sort(
  (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const { tag } = Astro.params;

if (tag === undefined) {
  throw new Error("Tag is required");
}

const tagArticles = allBlogArticles.filter(article =>
  article.data.tags.includes(tag)
);
---

<MainLayout title = "Articles">
  <div class="flex items-baseline flex-row-reverse justify-between -mb-6">
    <Link />
    <h1 class="text-lg sm:text-2xl font-bold pb-3 flex items-center gap-2">
      #{capitalizer(tag)} - {tagArticles.length} {tagArticles.length === 1 ? "article" : "articles"} 
      <span class="hidden sm:flex">
        found
      </span>
    </h1>
  </div>
  <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
    {tagArticles.map(article => (
      <ArticleCard article={article} />
    ))}
  </div>
</MainLayout>